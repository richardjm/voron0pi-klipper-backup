
####################################################################
#          Display LCD and WLED Controls
####################################################################

# Set LCD RGB at startup
[delayed_gcode RESETRGB_ONSTARTUP]
initial_duration: 10
gcode:
    # The long delay it to ensure that moonraker has time to register the set_wled remote command
    RESETRGB

[gcode_macro RESETRGB]
description: Default RGB for display and printer lights
gcode:
    _LIGHTS_FLICKER

# Keywords can be identified in M117 commands e.g. "Printing has been completed" == 'complete'
[gcode_macro _status_presets]
variable_off: -99
variable_lookup: {
        'off': -99,
        'ready': 45,
        'busy':  43,
        'heating': 41,
        'leveling': 40,
        'homing': 40,
        'cleaning': 40,
        'meshing': 40,
        'calibrating z': 40,
        'printing': 46,
        'complete': 42,
        'busy':  43
    }
gcode:
    # Do nothing
    
[gcode_macro LIGHTS]
description: Example LIGHTS R=1 G=0 B=0 or LIGHTS PS=4 or e.g. LIGHTS STATUS=printing
gcode:
    {% set R = params.R|default(1)|float %}
    {% set G = params.G|default(1)|float %}
    {% set B = params.B|default(1)|float %}
    {% set PS = params.PS|default(-1)|int %}
    {% set STATUS = params.STATUS|default('')|string %}
    
    {% if STATUS != '' %}
        {% set PS = printer["gcode_macro _status_presets"].lookup[STATUS] %}
    {% endif %}
    
    {% if PS == printer["gcode_macro _status_presets"].off %}
        LIGHTS_OFF
    {% elif PS >= 0 %}
        WLED_ON STRIP=lights PRESET={PS}
    {% else %}
        SET_WLED STRIP=lights RED={R} GREEN={G} BLUE={B} TRANSMIT=1
    {% endif %}

[gcode_macro LIGHTS_OFF]
description: WLED lights off
gcode:
    WLED_OFF STRIP=lights

[gcode_macro LIGHTS_RANDOM]
gcode:
    SET_WLED STRIP=lights RED={(range(0,100) | random) / 100} GREEN={(range(0,100) | random) / 100} BLUE={(range(0,100) | random) / 100} INDEX=1 TRANSMIT=1
    
# For M117 messages looks for the _status_presets strings in increasing priority order
# in the message, a status determined to be printing will perform a M117 to allow printing
# progress status to be displayed on the LCD
[gcode_macro M117]
rename_existing: M117.1
gcode:
    {% set ns = namespace(printing=false) %}
    
    # Check if M117 is empty - back to ready status (after a few seconds to let movements finish)
    {% if rawparams|trim == '' %}
        UPDATE_DELAYED_GCODE ID=_lights_ready DURATION=3
    {% else %}
        # Look for status names in message text
        {% for key, value in printer["gcode_macro _status_presets"].lookup.items() %}
             {% if key.upper() in rawparams.upper() %}
                 UPDATE_DELAYED_GCODE ID=_lights_ready DURATION=0
                 LIGHTS STATUS='{key}'                  # could also use value as PS=

                 {% if key == 'printing' %}
                    {% set ns.printing=true %}
                 {% elif ns.printing %}
                    {% set ns.printing=false %}
                 {% endif %}
             {% endif %}
        {% endfor %}
    {% endif %}
    
    # Don't show a 'printing' message so that status updates on the lcd
    {% if ns.printing %}
        M117.1
    {% else %}
        M117.1 {rawparams}
    {% endif %}

[delayed_gcode _lights_ready]
gcode:
    LIGHTS STATUS=ready

###############################
# TimBot99 neat "turn-on" macro
[gcode_macro _LIGHTS_FLICKER]
gcode:
    {% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}
    {% set LED_Strip = "lights" %}
    # Target colour is a warm white
    {% set R = 255/255 %}
    {% set G = 191/255 %}
    {% set B = 130/255 %}

    {% for toggletime in LEDTimes %}
      {% set ledTime = toggletime|string %}
      {% set loopCount = loop.index %}

      {% if loopCount is divisibleby 2 %} # If the loop index is divisible by 2 (first index is NOT so the LEd should turn ON)
        SET_WLED STRIP=lights RED={R} GREEN={G} BLUE={B} TRANSMIT=1
        G4 P{ledTime|int}
      {% else %}
        SET_WLED STRIP=lights RED=0 GREEN=0 BLUE=0 TRANSMIT=1
        G4 P{ledTime|int}
      {% endif %}

    {% endfor %}
